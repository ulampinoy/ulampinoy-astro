---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

function formatDate(dateStr: Date) {
  return new Date(dateStr).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}
---

<BaseLayout 
  title={post.data.title} 
  description={post.data.description}
  backgroundImage={post.data.image}
>
  <article class="prose-invert pt-16">
    {/* Hero Image Section - Full Bleed */}
    <div class="relative w-screen left-1/2 right-1/2 -mx-[50vw]">
      <div class="relative h-[80vh] w-screen">
        <img
          src={post.data.image}
          alt={post.data.title}
          class="w-full h-full object-cover"
        />
        <div
          class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent"
        >
        </div>
      </div>
      <div class="absolute inset-0 flex items-end pb-8 md:pb-16">
        <div class="container mx-auto md:max-w-3xl px-4 w-full">
          <div>
            {
              post.data.whetter && (
                <p class="text-amber-400 text-sm font-medium tracking-wide uppercase mb-4 inline-block">
                  {post.data.whetter}
                </p>
              )
            }
            <h1
              class="savate-heavy text-5xl md:text-6xl lg:text-7xl text-white mb-4 leading-tight"
            >
              {post.data.title}
            </h1>
            <p class="text-xl md:text-2xl text-white/80 mb-4">
              {post.data.description}
            </p>
            <div class="flex items-center text-white/60 text-sm space-x-4">
              <time datetime={post.data.date.toISOString()}>
                {formatDate(post.data.date)}
              </time>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-4 sm:px-6 py-8 sm:py-12">
      <div
        class="prose prose-sm sm:prose-base md:prose-lg lg:prose-xl mx-auto max-w-4xl"
      >
        <div class="[&_img]:mx-auto [&_img]:w-full [&_img]:max-w-full">
          <div
            class="[&>p:first-of-type]:first-letter:float-left [&>p:first-of-type]:first-letter:text-8xl [&>p:first-of-type]:first-letter:pr-3 [&>p:first-of-type]:first-letter:font-bold [&>p:first-of-type]:first-letter:text-amber-500 [&>p:first-of-type]:first-letter:font-[savate] [&>p]:w-[80%] [&>p]:mx-auto [&>p:has(>img)]:w-full"
          >
            <Content />
          </div>
        </div>
      </div>
    </div>
    <div class="container mx-auto max-w-6xl px-4">
      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="mt-12 pt-8 border-t ">
            <div class="flex flex-wrap gap-2">
              {post.data.tags.map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="px-3 py-1 bg-gray-100 rounded-sm hover:rounded-lg transition-all text-sm text-gray-700 hover:bg-gray-200 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </article>
</BaseLayout>

<style>
  :global(.prose img) {
    @apply pt-4;
    width: 100%;
    max-width: 100%;
    height: auto;
    display: block;
  }

  :global(.prose p) {
    @apply w-[90%] md:w-[80%] mx-auto my-4;
  }

  :global(.prose p:has(> img)) {
    width: 100%;
  }

  :global(.prose h2) {
    @apply mt-12 mb-6 text-2xl md:text-3xl font-bold;
  }

  :global(.prose h3) {
    @apply mt-8 mb-4 text-xl md:text-2xl font-bold uppercase tracking-wide;
  }

  :global(.prose li) {
    @apply my-2;
  }

  @media (min-width: 768px) {
    :global(.prose p:has(> img)) {
      width: calc(100% + 8rem);
      margin-left: -4rem;
      margin-right: -4rem;
    }
  }

  :global(.prose iframe) {
    @apply w-full aspect-video my-6 md:my-8;
  }
  :global(.prose a) {
    @apply text-amber-400 hover:text-amber-300 transition-colors;
  }

  :global(.prose a[href^="#"]) {
    text-decoration: none;
    position: relative;
    display: inline-block;
    margin: 0 2px;
    padding: 0 4px;
    font-size: 0.8em;
    line-height: 1;
    vertical-align: super;
    color: #f59e0b;
    background-color: rgba(245, 158, 11, 0.1);
    border-radius: 2px;
    transition: all 0.2s ease;
  }

  :global(.prose a[href^="#"]:hover) {
    background-color: rgba(245, 158, 11, 0.2);
  }
  :global(.prose p),
  :global(.prose ul),
  :global(.prose ol),
  :global(.prose h2),
  :global(.prose h3) {
    @apply w-[100%] md:w-[80%] mx-auto my-4;
  }

  :global(.prose h3),
  :global(.prose h2) {
    @apply mt-8 md:mt-12;
  }

  :global(.prose ol > li > p) {
    @apply mx-0 w-full;
  }
</style>
