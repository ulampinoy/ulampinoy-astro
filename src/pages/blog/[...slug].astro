---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";

// Import the client-side script
import '../../scripts/glossary-links';

// Get the current post from props
const { post } = Astro.props as { post: CollectionEntry<'blog'> };

// Get the Content component
const { Content } = await post.render();

// Author information is not used in this template

// Format date for display
const formatDate = (dateString: string | Date) => {
  const date = typeof dateString === "string" ? new Date(dateString) : dateString;
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric"
  });
};

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  backgroundImage={post.data.image}
  author={post.data.author || "UlamPinoy"}
  publishedTime={post.data.date.toISOString()}
  modifiedTime={new Date().toISOString()}
>
  <article class="pt-32">
    {/* Hero Image Section - Full Bleed */}
    <div class="relative -mt-16 w-full overflow-hidden">
      <div class="relative h-[44vh] sm:h-[50vh] md:h-[60vh] w-full">
        <div class="absolute inset-0 w-screen left-1/2 -translate-x-1/2">
          <img
            src={post.data.image}
            alt={post.data.title}
            class="w-full h-full object-cover"
          />
          <div
            class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent"
          >
          </div>
        </div>
      </div>
      <div class="absolute inset-0 flex items-end">
        <div class="container mx-auto max-w-3xl px-4 w-full pb-8 md:pb-16">
          <div>
            {
              post.data.whetter && (
                <p class="text-amber-600 text-sm font-medium tracking-wide uppercase mb-4 inline-block">
                  {post.data.whetter}
                </p>
              )
            }
            <h1
              class="savate-heavy text-3xl md:text-5xl lg:text-6xl text-white mb-4"
            >
              {post.data.title}
            </h1>
            <p class="text-xl md:text-2xl text-white/95 mb-6">
              {post.data.description}
            </p>
            <div class="flex items-center text-white/60 text-sm space-x-4">
              <time datetime={post.data.date.toISOString()}>
                {formatDate(post.data.date)}
              </time>
              {
                post.data.author && (
                  <span class="flex items-center">
                    <span class="mx-2">â€¢</span>
                    <span>By {post.data.author}</span>
                  </span>
                )
              }
            </div>
          </div>
        </div>
      </div>
    </div>

    {/* Content Section */}
    <div class="container mx-auto px-4 sm:px-6 py-8 sm:py-12">
      <div
        class="prose prose-sm sm:prose-base md:prose-lg lg:prose-xl mx-auto max-w-4xl prose-ul:pl-6"
      >
        <style>
          .prose ul {
            margin-left: 0;
            padding-left: 1.5rem;
          }
          .prose ul > li {
            padding-left: 0.5rem;
            margin-left: 0;
          }
          .prose ul > li:before {
            content: "";
            display: none;
          }
        </style>
        <div
          class="[&_img]:mx-auto [&_img]:w-full [&_img]:max-w-full [&_img]:rounded-lg"
        >
          <div
            class="[&>p:first-of-type]:first-letter:float-left [&>p:first-of-type]:first-letter:text-6xl md:[&>p:first-of-type]:first-letter:text-8xl [&>p:first-of-type]:first-letter:pr-2 [&>p:first-of-type]:first-letter:font-bold [&>p:first-of-type]:first-letter:text-amber-500 [&>p:first-of-type]:first-letter:font-[savate] [&>p]:w-[80%] [&>p]:mx-auto [&>p:has(>img)]:w-full"
          >
            <div class="prose max-w-none">
              <Content />
            </div>
            
            <!-- Add a script to initialize glossary links -->
            <script>
              // Re-run the glossary linker when the page is fully loaded
              document.addEventListener('DOMContentLoaded', () => {
                // Use a type-safe approach to access the global function
                if ('linkGlossaryTerms' in window && typeof window.linkGlossaryTerms === 'function') {
                  window.linkGlossaryTerms();
                }
              });
            </script>
          </div>
        </div>
      </div>

      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="container mx-auto max-w-6xl px-4">
            <div class="mt-12 pt-8 border-t">
              <div class="flex flex-wrap gap-2">
                {post.data.tags.map((tag) => (
                  <a
                    href={`/tags/${tag}`}
                    class="px-3 py-1 bg-gray-100 rounded-sm hover:rounded-lg text-sm text-gray-700 hover:bg-gray-200 transition-all"
                  >
                    {tag}
                  </a>
                ))}
              </div>
            </div>
          </div>
        )
      }
    </div>

    <style>
      :global(.prose img) {
        @apply pt-6;
        width: 100%;
        max-width: 100%;
        height: auto;
        display: block;
        border-radius: 0.5rem;
        box-shadow:
          0 10px 15px -3px rgba(0, 0, 0, 0.1),
          0 4px 6px -2px rgba(0, 0, 0, 0.05);
      }

      :global(.dark .prose img) {
        @apply border border-gray-800;
        box-shadow:
          0 4px 6px -1px rgba(0, 0, 0, 0.2),
          0 2px 4px -1px rgba(0, 0, 0, 0.1);
      }

      :global(.prose) {
        @apply text-base sm:text-lg leading-relaxed;
        font-family: "Noto Sans", sans-serif;
        color: inherit;
      }

      :global(.prose p) {
        @apply mb-6 text-gray-700 dark:text-gray-300;
        line-height: 1.8;
        font-size: 1.125rem;
      }

      :global(.prose > div > div > p:first-of-type) {
        @apply text-[1.4rem] leading-[1.6] text-gray-800 dark:text-gray-200 mb-8;
      }

      @media (max-width: 640px) {
        :global(.prose p) {
          @apply text-base leading-7;
        }
      }

      :global(.prose h2) {
        @apply mt-12 mb-6 text-2xl sm:text-3xl md:text-4xl font-bold leading-tight text-gray-900 dark:text-white;
        font-family: "Savate", serif;
        line-height: 1.3;
      }

      :global(.prose h3) {
        @apply mt-10 mb-5 text-xl sm:text-2xl font-bold uppercase tracking-wide text-gray-800 dark:text-gray-100;
        font-family: "Savate", serif;
        line-height: 1.4;
      }

      :global(.prose ul) {
        @apply pl-6 text-gray-700 dark:text-gray-300 list-disc;
      }

      :global(.prose ol) {
        @apply pl-6 text-gray-700 dark:text-gray-300;
      }

      :global(.prose ul > li) {
        @apply pl-1 mb-2 ml-0 relative;
      }

      :global(.prose ul > li::marker) {
        color: #f59e0b; /* amber-500 */
        font-size: 1.2em;
      }

      :global(.prose ol > li) {
        @apply pl-2 mb-2;
      }

      :global(.prose blockquote) {
        @apply font-serif text-gray-700 dark:text-gray-300 text-xl italic border-l-4 border-amber-400 pl-6 py-2 my-6 relative;
      }

      :global(.prose blockquote::before) {
        content: "";
      }

      :global(.prose blockquote p:first-of-type) {
        margin-top: 0;
      }

      :global(.prose blockquote p:last-of-type) {
        margin-bottom: 0;
      }

      :global(.prose iframe) {
        @apply w-full aspect-video my-6 md:my-8;
      }

      :global(.prose .footnotes) {
        @apply text-sm text-gray-500 dark:text-gray-400 mt-12 pt-6 border-t border-gray-100 dark:border-gray-800;
      }

      :global(.prose .footnotes p) {
        @apply text-sm leading-relaxed;
      }

      :global(.prose .footnote-backref) {
        @apply ml-1 text-amber-500 no-underline;
      }
      :global(.prose a) {
        @apply text-amber-600 hover:text-amber-500 transition-colors underline underline-offset-4 decoration-amber-400/50 hover:decoration-amber-500/70;
      }

      :global(.prose a[href^="#"]) {
        text-decoration: none;
        position: relative;
        display: inline-block;
        margin: 0 2px;
        padding: 0 4px;
        font-size: 0.8em;
        line-height: 1;
        vertical-align: super;
        color: #f59e0b;
        background-color: rgba(245, 158, 11, 0.1);
        border-radius: 2px;
        transition: all 0.2s ease;
      }

      :global(.prose a[href^="#"]:hover) {
        background-color: rgba(245, 158, 11, 0.2);
      }
      :global(.prose p),
      :global(.prose ul),
      :global(.prose ol),
      :global(.prose h2),
      :global(.prose h3) {
        @apply w-[100%] md:w-[80%] mx-auto my-4;
      }

      :global(.prose h3),
      :global(.prose h2) {
        @apply mt-8 md:mt-12;
      }

      :global(.prose ol > li > p) {
        @apply mx-0 w-full;
      }
    </style>
  </article></BaseLayout
>
