---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

function formatDate(dateStr: Date) {
  return new Date(dateStr).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="pt-16 prose-invert noto-sans">
    <div class="relative h-[70vh]">
      <img
        src={post.data.image}
        alt={post.data.title}
        class="w-full h-full object-cover"
      />
      <div
        class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent"
      >
        <div
          class="container mx-auto max-w-3xl px-4 h-full flex flex-col justify-end pb-16"
        >
          <div>
            {
              post.data.whetter && (
                <p class="text-amber-400 text-sm font-medium tracking-wide uppercase mb-4 inline-block">
                  {post.data.whetter}
                </p>
              )
            }
            <h1
              class="savate-heavy text-4xl md:text-6xl lg:text-7xl text-white mb-4"
            >
              {post.data.title}
            </h1>
            <p class="text-2xl text-white/90 mb-4">
              {post.data.description}
            </p>
            <div class="flex items-center text-white/60 text-sm space-x-4">
              <time datetime={post.data.date.toISOString()}>
                {formatDate(post.data.date)}
              </time>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-4 py-12">
      <div class="prose prose-lg mx-auto">
        <div
          class="prose-img:mx-auto md:prose-img:-mx-16 prose-img:max-w-[calc(100%+4rem)] md:prose-img:max-w-[calc(100%+8rem)]"
        >
          <div
            class="[&>p:first-of-type]:first-letter:float-left [&>p:first-of-type]:first-letter:text-7xl [&>p:first-of-type]:first-letter:pr-3 [&>p:first-of-type]:first-letter:font-bold [&>p:first-of-type]:first-letter:text-amber-500 [&>p:first-of-type]:first-letter:font-[savate]"
          >
            <Content />
          </div>
        </div>
      </div>

      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="mt-12 pt-8 border-t">
            <div class="flex flex-wrap gap-2">
              {post.data.tags.map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="px-3 py-1 bg-gray-100 rounded-full text-sm text-gray-700 hover:bg-gray-200 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </article>
</BaseLayout>

<style>
  :global(.prose img) {
    @apply md:w-auto md:rounded-lg;
    margin-left: calc(-2rem);
    margin-right: calc(-2rem);
    max-width: calc(100% + 4rem);
  }

  @media (min-width: 768px) {
    :global(.prose img) {
      margin-left: calc(-8rem);
      margin-right: calc(-8rem);
      max-width: calc(100% + 16rem);
    }
  }

  :global(.prose p) {
    @apply max-w-[65ch] mx-auto;
  }
</style>
