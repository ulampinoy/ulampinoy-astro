---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";

const { post } = Astro.props;
const { Content } = await post.render();

// Get all posts for related section
const allPosts = await getCollection("blog", ({ data }) => !data.draft);

// Enhanced related posts logic
let relatedPosts = [];
if (post.data.related && post.data.related.length > 0) {
  // First get explicitly related posts
  relatedPosts = allPosts.filter(
    (p) =>
      post.data.related.includes(p.slug) ||
      post.data.related.includes(p.data.title)
  );

  // If we have less than 3 related posts, add posts with matching tags
  if (relatedPosts.length < 3 && post.data.tags) {
    const additionalPosts = allPosts
      .filter(
        (p) =>
          !relatedPosts.includes(p) && // Not already included
          p.slug !== post.slug && // Not the current post
          p.data.tags?.some((tag) => post.data.tags.includes(tag)) // Has matching tags
      )
      .slice(0, 3 - relatedPosts.length);

    relatedPosts = [...relatedPosts, ...additionalPosts];
  }
}

function formatDate(dateStr: Date) {
  return new Date(dateStr).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="prose prose-invert mx-auto">
    <div class="relative h-[70vh]">
      <img
        src={post.data.image}
        alt={post.data.title}
        class="w-full h-full object-cover"
      />
      <div
        class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent"
      >
        <div
          class="container mx-auto max-w-6xl px-4 h-full flex flex-col justify-end pb-16"
        >
          <div>
            {
              post.data.whetter && (
                <p class="text-amber-400 text-sm font-medium tracking-wide uppercase mb-4">
                  {post.data.whetter}
                </p>
              )
            }
            <h1
              class="savate text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-4"
            >
              {post.data.title}
            </h1>
            <p class="text-xl text-white/90 mb-4">
              {post.data.description}
            </p>
            <div class="flex items-center text-white/80 text-sm space-x-4">
              <span>{post.data.author}</span>
              <span>â€¢</span>
              <time datetime={post.data.date.toISOString()}>
                {formatDate(post.data.date)}
              </time>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mx-auto px-4 py-12">
      <div
        class="prose prose-invert max-w-none [&>p:first-of-type]:text-article-intro [&>p:first-of-type]:mb-8"
      >
        <div
          class="[&>p:first-of-type]:first-letter:float-left [&>p:first-of-type]:first-letter:text-7xl [&>p:first-of-type]:first-letter:pr-3 [&>p:first-of-type]:first-letter:font-bold [&>p:first-of-type]:first-letter:text-yellow-500"
        >
          <Content />
        </div>
      </div>

      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="mt-12 pt-8 border-t border-zinc-800">
            <div class="flex flex-wrap gap-2">
              {post.data.tags.map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="px-3 py-1 bg-zinc-800 rounded-full text-sm text-white/80 hover:bg-zinc-700 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        )
      }

      {/* Related Posts Section */}
      {
        relatedPosts.length > 0 && (
          <div class="mt-16 pt-12 border-t border-zinc-800">
            <h2 class="text-2xl font-bold mb-8 text-white">Related Posts</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {relatedPosts.map((related) => (
                <a
                  href={`/${related.data.hasVideo ? "videos" : "blog"}/${related.slug}`}
                  class="group block"
                >
                  <div class="aspect-video overflow-hidden rounded-lg mb-4">
                    <img
                      src={related.data.image}
                      alt={related.data.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  </div>
                  <h3 class="text-lg font-semibold text-white group-hover:text-yellow-500 transition-colors">
                    {related.data.title}
                  </h3>
                  <p class="mt-1 text-zinc-400 line-clamp-2">
                    {related.data.description}
                  </p>
                </a>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </article>
</BaseLayout>

<style>
  :global(.prose :where(img)) {
    @apply rounded-lg shadow-lg;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    display: block;
  }

  @media (min-width: 768px) {
    :global(.prose :where(img)) {
      width: 120%;
      margin-left: -10%;
      margin-right: -10%;
    }
  }
</style>
